# Generated by Django 5.2 on 2025-04-24 08:19

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('under_title', models.TextField()),
                ('photo', models.ImageField(upload_to='about_photos/')),
                ('job', models.CharField(max_length=64)),
                ('under_career_text', models.TextField()),
                ('birthday', models.DateField()),
                ('website', models.CharField(max_length=64)),
                ('phone', models.CharField(max_length=32)),
                ('city', models.CharField(max_length=64)),
                ('age', models.PositiveSmallIntegerField()),
                ('degree', models.CharField(choices=[('None', 'Aucun diplôme'), ('HighSchool', 'Baccalauréat'), ('Bachelor', 'Licence'), ('Master', 'Master'), ('PhD', 'Doctorat')], max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('freelance', models.BooleanField()),
                ('end_about_text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('under_title', models.TextField()),
                ('location', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=32)),
                ('iframe_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('data_typed_items', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(choices=[('bi bi-briefcase', 'Briefcase'), ('bi bi-card-checklist', 'Card Checklist'), ('bi bi-bar-chart', 'Bar Chart'), ('bi bi-binoculars', 'Binoculars'), ('bi bi-brightness-high', 'Brightness High'), ('bi bi-calendar4-week', 'Calendar Week')], max_length=50)),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('under_title', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('percentage', models.PositiveIntegerField(help_text='Pourcentage de maîtrise entre 0 et 100', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='SkillSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('under_title', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.TextField()),
                ('image', models.ImageField(upload_to='testimonials/')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TestimonialSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('under_title', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('client', models.CharField(max_length=100)),
                ('project_date', models.DateField()),
                ('project_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='portfolio_front.portfoliocategory')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='portfolio/')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='portfolio_front.portfolioitem')),
            ],
        ),
    ]
